<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[【Android】反编译时常见的问题]]></title>
    <url>%2F2018%2F02%2F05%2F%E3%80%90Android%E3%80%91%E5%8F%8D%E7%BC%96%E8%AF%91%E5%90%8E%E5%AE%89%E8%A3%85apk%E6%8A%A5%E9%94%99-INSTALL-PARSE-FAILED-NO-CERTIFICATES-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[今天在学习 Android群英传第9章-Android系统与安全机制-224页 的时候，遇到了一些问题。 apktool_2.0.0b7.jar d xxx.apk 生成空文件夹：尝试使用Android反编译工具 apktool_2.0.0b7.jar 来反编译微信运动步数修改器的apk文件。使用如下命令： C:\Users\Administrator&gt;D:\Kit\反编译\apktool_2.3.1.jar d D:\Kit\反编译\StepChanger-1.4-release.apk 然后在 D:\Kit\反编译 目录下生成了 StepChanger-1.4-release 文件夹，可是文件里什么都没有。 原因及解决方案： apktool工具版本过低，去官网下载新版本apktool替换即可。下载链接：https://ibotpeaches.github.io/Apktool/ 安装反编译后的apk报错：[INSTALL_PARSE_FAILED_NO_CERTIFICATES]反编译apk后，使用 apotool.jar b xxx.apk 命令重新打包apk成功，但是在安装apk的时候报错。 原因及解决方案： 是签名的问题，具体原因不清楚。解决步骤如下： 1. 使用命令行生成签名文件 我在D:\Kit\反编译\目录下创建了Android_keystore。然后在该文件夹下生成签名文件。 keyTool是秘钥和证书管理工具，是JDK自带的，可以通过命令行方式直接使用。 123456789101112131415161718192021D:\Kit\反编译\Android_keystore&gt;keytool -genkey -alias aeo_android.keystore -keyalg RSA -validity 20000 -keystore aeo_android.keystore输入密钥库口令:再次输入新口令:您的名字与姓氏是什么? [Unknown]: qiaopc您的组织单位名称是什么? [Unknown]: gionee您的组织名称是什么? [Unknown]: gionee您所在的城市或区域名称是什么? [Unknown]: beijing您所在的省/市/自治区名称是什么? [Unknown]: beijing该单位的双字母国家/地区代码是什么? [Unknown]: cnCN=qiaopc, OU=gionee, O=gionee, L=beijing, ST=beijing, C=cn是否正确? [否]: y输入 &lt;aeo_android.keystore&gt; 的密钥口令 (如果和密钥库口令相同, 按回车):再次输入新口令: 这时会在D:\Kit\反编译\Android_keystore文件夹下生成aeo_android.keystore文件，就是我们需要的签名文件 命令参数说明： -genkey 生成证书文件 -alias 生成证书文件的别名 -keyalg 指定生成秘钥的算法 -validity 证书有效天数 -keystore 秘钥库的路径及名字，不指定的话，会在操作系统的用户目录下生成.keystore文件 注： 名字与姓氏应该是域名。 用keytool生成证书时需要保证 -alias 和 -keystore 名称相同，否则下一步签名的时候jarsigner会找不到证书链。 2. 用生成的签名文件对apk进行签名 jarsigner顾名思义-签名者，可以利用秘钥中的信息来产生或校验jar包的数字签名。（jar包将很多数据打包在里面） 12D:\Kit\反编译\Android_keystore&gt;jarsigner -verbose -keystore aeo_android.keystore -signedjar signed.apk D:\Kit\反编译\StepChanger-1.4-release\dist\StepChanger-1.4-release.apk aeo_android.keystore输入密钥库的密码短语: 通过以上命令就可以将StepChanger-1.4-release.apk签名，生成sigined.apk。 3. 验证签名是否成功 1234567D:\Kit\反编译\Android_keystore&gt;jarsigner -verify signed.apkjar 已验证。警告:此 jar 包含证书链未验证的条目。此 jar 包含的签名没有时间戳。如果没有时间戳, 则在签名者证书的到期日期 (2072-11-08) 或以后的任何撤销日期之后, 用户可能无法验证此 jar。 最后，我们可以将signed.apk安装到手机上了。]]></content>
      <categories>
        <category>android</category>
      </categories>
      <tags>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【AndroidStudio】创建objectAnimator]]></title>
    <url>%2F2018%2F01%2F31%2F%E3%80%90AndroidStudio%E3%80%91%E5%88%9B%E5%BB%BAobjectAnimator%2F</url>
    <content type="text"><![CDATA[今天在看 Android群英传第7章-Android动画机制与绘图技巧-180页 的时候，遇到了问题。 起因：书中在 AndroidStudio 中的 res 目录下创建了 anim 文件夹，并创建了 anim_path1.xml，文件里写的是 objectAnimator 这个标签。但是自己在 AndroidStudio 中写 demo 并没有 objectAnimator 的提示，而且在书中的源代码里，objectAnimator 也爆红（可以运行）。 解决过程：1.在 AndroidStudio 中的 res 目录下创建 animator 文件夹2.右键该animator文件夹-&gt;new-&gt;Animator resource file(会在菜单项里自动出现提示)3.根据弹框提示输入 File name 和 Root element，分别是 anim_path1 和 objectAnimator(这时会有自动提示)4.创建成功 个人怀疑是 AndroidStudio 升级新版本的原因，以后 res 目录下新建的 anim 要改名为 animator 了。（vector标签的xml文件也如法炮制，直接在drawable文件夹下 new-&gt;Vector Asset 即可。）]]></content>
      <categories>
        <category>androidStudio</category>
      </categories>
      <tags>
        <tag>androidStudio</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【Hexo】写出hexo第一篇博文]]></title>
    <url>%2F2018%2F01%2F31%2Fhexo%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87%2F</url>
    <content type="text"><![CDATA[今天决定写出我的hexo第一篇博文，之前搭建了这个博客就没时间打理了，现在腾出时间来试试写一些东西，练一练文笔。 首先先回忆一下如何创建出第一篇博文，打开node.js command prompt 这个命令行，之前我图方便，直接把它固定在任务栏里了。 回忆一下部署hexo常用的几个命令： cd d:/blog hexo clean //清除hexo缓存 hexo g // generate 生成hexo hexo d // deploy 部署hexo到服务器 hexo server // 开启hexo本地服务器，可以在浏览器通过localhost:4000来本地浏览并修改 现在我要写一篇博客，第一步就是要生成博客文件： d:\blog&gt;hexo new post hexo第一篇博文 INFO Created: d:\blog\source\_posts\2018-01-31-hexo第一篇博文.md 现在已经通过 hexo new post + 博文名 创建出了博客文件，文件在 D:\blog\source_posts 目录下。然后我们打开 2018-01-31-hexo第一篇博文.md ， 现在就可以写作了。至于该博文的标题、日期、标签、分类等属性，我们需要在文件的最开始定义好： --- title: 写出hexo第一篇博文 date: 2018-01-31 21:57:39 tags: hexo categories: hexo --- 然后在下面写我们想要写的文字就可以了。 写完文章，保存之后，在 node.js command prompt 的命令行里生成hexo，并部署到服务器上。 hexo generate -d // 该命令同等于 hexo g + hexo d 当出现如下反馈时，就是部署成功了。 create mode 100644 2018/01/31/hexo第一篇博文/index.html Branch &apos;master&apos; set up to track remote branch &apos;master&apos; from &apos;https://github.com/qiaopeichen/qiaopeichen.github.io.git&apos;. To https://github.com/qiaopeichen/qiaopeichen.github.io.git b6e0a83..c0c2a67 HEAD -&gt; master INFO Deploy done: git 刷新一下qiaopc.xyz，现在这篇博客就出现了。]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[【Markdown】语法说明]]></title>
    <url>%2F2018%2F01%2F05%2Fmarkdown%2F</url>
    <content type="text"><![CDATA[欢迎使用 Cmd Markdown 编辑阅读器 我们理解您需要更便捷更高效的工具记录思想，整理笔记、知识，并将其中承载的价值传播给他人，Cmd Markdown 是我们给出的答案 —— 我们为记录思想和分享知识提供更专业的工具。 您可以使用 Cmd Markdown： 整理知识，学习笔记 发布日记，杂文，所见所想 撰写发布技术文稿（代码支持） 撰写发布学术论文（LaTeX 公式支持） 除了您现在看到的这个 Cmd Markdown 在线版本，您还可以前往以下网址下载： Windows/Mac/Linux 全平台客户端 请保留此份 Cmd Markdown 的欢迎稿兼使用说明，如需撰写新稿件，点击顶部工具栏右侧的 新文稿 或者使用快捷键 Ctrl+Alt+N。 什么是 MarkdownMarkdown 是一种方便记忆、书写的纯文本标记语言，用户可以使用这些标记符号以最小的输入代价生成极富表现力的文档：譬如您正在阅读的这份文档。它使用简单的符号标记不同的标题，分割不同的段落，粗体 或者 斜体 某些文字，更棒的是，它还可以 1. 制作一份待办事宜 Todo 列表 支持以 PDF 格式导出文稿 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率 新增 Todo 列表功能 修复 LaTex 公式渲染问题 新增 LaTex 公式编号功能 2. 书写一个质能守恒公式[^LaTeX]$$E=mc^2$$ 3. 高亮一段代码[^code]1234567@requires_authorizationclass SomeClass: passif __name__ == '__main__': # A comment print 'hello world' 4. 高效绘制 流程图12345678st=&gt;start: Startop=&gt;operation: Your Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 5. 高效绘制 序列图123Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks! 6. 高效绘制 甘特图12345678910111213title 项目开发流程section 项目确定 需求分析 :a1, 2016-06-22, 3d 可行性报告 :after a1, 5d 概念验证 : 5dsection 项目实施 概要设计 :2016-07-05 , 5d 详细设计 :2016-07-08, 10d 编码 :2016-07-15, 10d 测试 :2016-07-22, 5dsection 发布验收 发布: 2d 验收: 3d 7. 绘制表格 项目 价格 数量 计算机 \$1600 5 手机 \$12 12 管线 \$1 234 8. 更详细语法说明想要查看更详细的语法说明，可以参考我们准备的 Cmd Markdown 简明语法手册，进阶用户可以参考 Cmd Markdown 高阶语法手册 了解更多高级功能。 总而言之，不同于其它 所见即所得 的编辑器：你只需使用键盘专注于书写文本内容，就可以生成印刷级的排版格式，省却在键盘和工具栏之间来回切换，调整内容和格式的麻烦。Markdown 在流畅的书写和印刷级的阅读体验之间找到了平衡。 目前它已经成为世界上最大的技术分享网站 GitHub 和 技术问答网站 StackOverFlow 的御用书写格式。 什么是 Cmd Markdown您可以使用很多工具书写 Markdown，但是 Cmd Markdown 是这个星球上我们已知的、最好的 Markdown 工具——没有之一 ：）因为深信文字的力量，所以我们和你一样，对流畅书写，分享思想和知识，以及阅读体验有极致的追求，我们把对于这些诉求的回应整合在 Cmd Markdown，并且一次，两次，三次，乃至无数次地提升这个工具的体验，最终将它演化成一个 编辑/发布/阅读 Markdown 的在线平台——您可以在任何地方，任何系统/设备上管理这里的文字。 1. 实时同步预览我们将 Cmd Markdown 的主界面一分为二，左边为编辑区，右边为预览区，在编辑区的操作会实时地渲染到预览区方便查看最终的版面效果，并且如果你在其中一个区拖动滚动条，我们有一个巧妙的算法把另一个区的滚动条同步到等价的位置，超酷！ 2. 编辑工具栏也许您还是一个 Markdown 语法的新手，在您完全熟悉它之前，我们在 编辑区 的顶部放置了一个如下图所示的工具栏，您可以使用鼠标在工具栏上调整格式，不过我们仍旧鼓励你使用键盘标记格式，提高书写的流畅度。 3. 编辑模式完全心无旁骛的方式编辑文字：点击 编辑工具栏 最右侧的拉伸按钮或者按下 Ctrl + M，将 Cmd Markdown 切换到独立的编辑模式，这是一个极度简洁的写作环境，所有可能会引起分心的元素都已经被挪除，超清爽！ 4. 实时的云端文稿为了保障数据安全，Cmd Markdown 会将您每一次击键的内容保存至云端，同时在 编辑工具栏 的最右侧提示 已保存 的字样。无需担心浏览器崩溃，机器掉电或者地震，海啸——在编辑的过程中随时关闭浏览器或者机器，下一次回到 Cmd Markdown 的时候继续写作。 5. 离线模式在网络环境不稳定的情况下记录文字一样很安全！在您写作的时候，如果电脑突然失去网络连接，Cmd Markdown 会智能切换至离线模式，将您后续键入的文字保存在本地，直到网络恢复再将他们传送至云端，即使在网络恢复前关闭浏览器或者电脑，一样没有问题，等到下次开启 Cmd Markdown 的时候，她会提醒您将离线保存的文字传送至云端。简而言之，我们尽最大的努力保障您文字的安全。 6. 管理工具栏为了便于管理您的文稿，在 预览区 的顶部放置了如下所示的 管理工具栏： 通过管理工具栏可以： 发布：将当前的文稿生成固定链接，在网络上发布，分享 新建：开始撰写一篇新的文稿 删除：删除当前的文稿 导出：将当前的文稿转化为 Markdown 文本或者 Html 格式，并导出到本地 列表：所有新增和过往的文稿都可以在这里查看、操作 模式：切换 普通/Vim/Emacs 编辑模式 7. 阅读工具栏 通过 预览区 右上角的 阅读工具栏，可以查看当前文稿的目录并增强阅读体验。 工具栏上的五个图标依次为： 目录：快速导航当前文稿的目录结构以跳转到感兴趣的段落 视图：互换左边编辑区和右边预览区的位置 主题：内置了黑白两种模式的主题，试试 黑色主题，超炫！ 阅读：心无旁骛的阅读模式提供超一流的阅读体验 全屏：简洁，简洁，再简洁，一个完全沉浸式的写作和阅读环境 8. 阅读模式在 阅读工具栏 点击 或者按下 Ctrl+Alt+M 随即进入独立的阅读模式界面，我们在版面渲染上的每一个细节：字体，字号，行间距，前背景色都倾注了大量的时间，努力提升阅读的体验和品质。 9. 标签、分类和搜索在编辑区任意行首位置输入以下格式的文字可以标签当前文档： 标签： 未分类 标签以后的文稿在【文件列表】（Ctrl+Alt+F）里会按照标签分类，用户可以同时使用键盘或者鼠标浏览查看，或者在【文件列表】的搜索文本框内搜索标题关键字过滤文稿，如下图所示： 10. 文稿发布和分享在您使用 Cmd Markdown 记录，创作，整理，阅读文稿的同时，我们不仅希望它是一个有力的工具，更希望您的思想和知识通过这个平台，连同优质的阅读体验，将他们分享给有相同志趣的人，进而鼓励更多的人来到这里记录分享他们的思想和知识，尝试点击 (Ctrl+Alt+P) 发布这份文档给好友吧！ 再一次感谢您花费时间阅读这份欢迎稿，点击 (Ctrl+Alt+N) 开始撰写新的文稿吧！祝您在这里记录、阅读、分享愉快！ 作者 @ghosert2016 年 07月 07日 [^LaTeX]: 支持 LaTeX 编辑显示支持，例如：$\sum_{i=1}^n a_i=0$， 访问 MathJax 参考更多使用方法。 [^code]: 代码高亮功能支持包括 Java, Python, JavaScript 在内的，四十一种主流编程语言。 于2018/1/5 22:50修改测试]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
</search>
